import"isomorphic-fetch";function e(){return e=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var s=arguments[t];for(var a in s)Object.prototype.hasOwnProperty.call(s,a)&&(e[a]=s[a])}return e},e.apply(this,arguments)}class t{constructor(e){this.message=void 0,this.status=void 0,this.statusText=void 0,this.status=e.status,this.statusText=e.statusText}}class s extends t{constructor(e){super(e),this.message="Please check the query parameters"}}class a extends t{constructor(e){super(e),this.message="Make sure to send a valid RapidAPI key"}}class r extends t{constructor(e){super(e),this.message="You're not allowed to access this endpoint"}}class i extends t{constructor(e){super(e),this.message="This endpoint doesn't exist"}}class n extends t{constructor(e){super(e),this.message="You've exceeded the quota"}}class o extends t{constructor(e){super(e),this.message="The API is currently down"}}class u{constructor(t){this.request=void 0,this.request=({uri:s,params:a})=>{const r=new URLSearchParams(Object.entries(a).reduce((t,[s,a])=>e({},t,{[s]:String(a)}),{})).toString();return fetch(`https://meteostat.p.rapidapi.com/${s}?${r}`,{headers:{"x-rapidapi-host":"meteostat.p.rapidapi.com","x-rapidapi-key":t}})}}async makeApiRequest(e,t){try{const s=await this.request({uri:e,params:t});if(!s.ok)throw s;return s.json()}catch(e){switch(null==e?void 0:e.status){case 400:throw new s(e);case 401:throw new a(e);case 403:throw new r(e);case 404:throw new i(e);case 429:throw new n(e);case 503:throw new o(e);default:throw e}}}}class h{constructor(e){this.request=void 0,this.request=e}async daily(e){return await this.request.makeApiRequest("point/daily",e)}async hourly(e){return await this.request.makeApiRequest("point/hourly",e)}async monthly(e){return await this.request.makeApiRequest("point/monthly",e)}async normals(e){return await this.request.makeApiRequest("point/normals",e)}}class c{constructor(e){this.request=void 0,this.request=e}async daily(e){return await this.request.makeApiRequest("stations/daily",e)}async hourly(e){return await this.request.makeApiRequest("stations/hourly",e)}async meta(e){return await this.request.makeApiRequest("stations/meta",e)}async monthly(e){return await this.request.makeApiRequest("stations/monthly",e)}async nearby(e){return await this.request.makeApiRequest("stations/nearby",e)}async normals(e){return await this.request.makeApiRequest("stations/normals",e)}}var l;!function(e){e[e.Clear=1]="Clear",e[e.Fair=2]="Fair",e[e.Cloudy=3]="Cloudy",e[e.Overcast=4]="Overcast",e[e.Fog=5]="Fog",e[e.FreezingFog=6]="FreezingFog",e[e.LightRain=7]="LightRain",e[e.Rain=8]="Rain",e[e.HeavyRain=9]="HeavyRain",e[e.FreezingRain=10]="FreezingRain",e[e.HeavyFreezingRain=11]="HeavyFreezingRain",e[e.Sleet=12]="Sleet",e[e.HeavySleet=13]="HeavySleet",e[e.LightSnowfall=14]="LightSnowfall",e[e.Snowfall=15]="Snowfall",e[e.HeavySnowfall=16]="HeavySnowfall",e[e.RainShower=17]="RainShower",e[e.HeavyRainShower=18]="HeavyRainShower",e[e.SleetShower=19]="SleetShower",e[e.HeavySleetShower=20]="HeavySleetShower",e[e.SnowShower=21]="SnowShower",e[e.HeavySnowShower=22]="HeavySnowShower",e[e.Lightning=23]="Lightning",e[e.Hail=24]="Hail",e[e.Thunderstorm=25]="Thunderstorm",e[e.HeavyThunderstorm=26]="HeavyThunderstorm",e[e.Storm=27]="Storm"}(l||(l={}));class w{constructor(e){this.request=void 0,this.point=void 0,this.stations=void 0,this.request=new u(e),this.point=new h(this.request),this.stations=new c(this.request)}}export{w as Meteostat,l as WeatherConditionCode};
//# sourceMappingURL=index.modern.js.map
